trigger:
  branches:
    include:
      - main

name: $(date:yyyyMMdd)$(rev:.r)

stages:
  - stage: BuildStage
    displayName: Build Stage
    jobs:
      - job: BuildJob
        displayName: Build Job
        pool:
          name: Default
        steps:
          - checkout: self
            clean: true
            fetchTags: false

          # Install dependencies for frontend
          - task: Npm@1
            displayName: Install Frontend Dependencies
            inputs:
              workingDir: auth-micro-frontend
              verbose: false

          # Install dependencies for backend
          - task: Npm@1
            displayName: Install Backend Dependencies
            inputs:
              workingDir: auth-micro-backend
              verbose: false

          # Build frontend
          - task: Npm@1
            displayName: Build Frontend
            inputs:
              command: custom
              workingDir: auth-micro-frontend
              verbose: false
              customCommand: run build

  - stage: TestStage
    displayName: Test and Code Coverage Stage
    dependsOn: BuildStage
    jobs:
      - job: TestJob
        displayName: Test and Code Coverage
        pool:
          name: Default
        steps:
          # Run unit tests and generate code coverage
          - task: Npm@1
            displayName: Run Backend Tests
            inputs:
              command: custom
              workingDir: auth-micro-backend
              verbose: false
              customCommand: test -- --coverage
          
          - script: |
              echo "Checking for coverage file..."
              ls auth-micro-backend/coverage
              cat auth-micro-backend/coverage/lcov.info
            displayName: Debug Coverage Report Path
            workingDirectory: $(System.DefaultWorkingDirectory)


          # Prepare SonarQube Analysis
          - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@7
            displayName: Prepare analysis on SonarQube Server
            inputs:
              SonarQube: 9566e120-0d17-47d4-82e9-074f904af399
              scannerMode: cli
              configMode: manual
              cliProjectKey: COMP367-Group5_COMP367-Group5_AZODG3CAJiP_amtEclN-
              projectKey: COMP367-Group5_COMP367-Group5_AZODG3CAJiP_amtEclN-
              cliSources: auth-micro-backend
              extraProperties: |
                sonar.javascript.lcov.reportPaths=coverage/lcov.info

          # Run SonarQube Code Analysis
          - task: SonarSource.sonarqube.6D01813A-9589-4B15-8491-8164AEB38055.SonarQubeAnalyze@7
            displayName: Run Code Analysis

          # Publish SonarQube Quality Gate Results
          - task: SonarSource.sonarqube.291ed61f-1ee4-45d3-b1b0-bf822d9095ef.SonarQubePublish@7
            displayName: Publish Quality Gate Result

  - stage: ArchiveStage
    displayName: Archive Artifacts Stage
    dependsOn: TestStage
    jobs:
      - job: ArchiveJob
        displayName: Archive and Publish Artifacts
        pool:
          name: Default
        steps:
          # Archive Files
          - task: ArchiveFiles@2
            displayName: Archive files
            inputs:
              rootFolderOrFile: $(System.DefaultWorkingDirectory)
              includeRootFolder: false

          # Publish Artifacts
          - task: PublishBuildArtifacts@1
            displayName: 'Publish artifacts: drop'
            inputs:
              TargetPath: '\\my\share\$(Build.DefinitionName)\$(Build.BuildNumber)'
